'use strict';

angular.module('app-bootstrap').controller('topArtistsController', ['userService', '$scope', function (userService, $scope) {
  var _this = this;

  var limitTopArtist = 10;
  var limitTracks = 200;
  var user = 'lopeznoeliab';
  this.chart = false;

  $scope.title = 'Top';
  $scope.subtitle = 'Artists';

  // Chart data
  this.data = [{
    name: 'Top artists',
    children: []
  }];

  // Chart options
  this.options = {
    chart: {
      type: 'sunburstChart',
      height: 450,
      color: d3.scale.category10(),
      duration: 250
    }
  };

  this.encode = function (string) {
    return _.replace(_.replace(string, '&', '%2527'), '+', '%252B');
  };

  this.checkItem = function (itemName, itemsArray) {
    return _.findIndex(itemsArray, function (o) {
      return o.name === itemName;
    });
  };

  this.createArtistTracks = function (album, track) {
    var trackName = track.name;
    var trackIndex = _this.checkItem(trackName, album.children);
    // The song doesnt exist
    if (trackIndex === -1) {
      var newTrack = {
        name: track.name,
        size: 1
      };
      album.children.push(newTrack);
    } else {
      album.children[trackIndex].size++;
    }
    album.size++;
    // sacar de aca
    _this.chart = true;
  };

  this.createArtistAlbums = function (artist, artistNameEncoded) {
    userService.getArtistTracks(user, artistNameEncoded, limitTracks).then(function (artistTracksResponse) {
      var artistTracks = artistTracksResponse.data.artisttracks.track;
      angular.forEach(artistTracks, function (track) {
        var albumName = track.album['#text'];
        var albumIndex = _this.checkItem(albumName, artist.children);
        // The album doesnt exist
        if (albumIndex === -1) {
          var newAlbum = {
            name: albumName,
            size: 0,
            children: []
          };
          artist.children.push(newAlbum);
          albumIndex = artist.children.length - 1;
        }
        _this.createArtistTracks(artist.children[albumIndex], track);
      });
    });
  };

  // Push new artist to the array
  this.createNewArtist = function (topArtistArray) {
    angular.forEach(topArtistArray, function (artist, index) {
      var newArtist = {
        name: artist.name,
        size: artist.playcount,
        children: []
      };
      _this.data[0].children.push(newArtist);
      _this.createArtistAlbums(_this.data[0].children[index], _this.encode(artist.name));
    });
  };

  // Get top artists from Last.fm api
  userService.getTopArtists(user, limitTopArtist).then(function (topArtistsResponse) {
    var topArtists = topArtistsResponse.data.topartists.artist;
    _this.createNewArtist(topArtists);
  });

  // debugger;
  console.log(this.data);
  // this.chart = true;
}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2NlbnRlcmVkL3RvcF9hcnRpc3RzL3RvcEFydGlzdHNDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsUUFBUSxNQUFSLENBQWUsZUFBZixFQUFnQyxVQUFoQyxDQUEyQyxzQkFBM0MsRUFBbUUsQ0FDakUsYUFEaUUsRUFDbEQsUUFEa0QsRUFFakUsVUFBVSxXQUFWLEVBQXVCLE1BQXZCLEVBQStCO0FBQUE7O0FBRTdCLE1BQU0saUJBQWlCLEVBQXZCO0FBQ0EsTUFBTSxjQUFjLEdBQXBCO0FBQ0EsTUFBTSxPQUFPLGNBQWI7QUFDQSxPQUFLLEtBQUwsR0FBYSxLQUFiOztBQUVBLFNBQU8sS0FBUCxHQUFlLEtBQWY7QUFDQSxTQUFPLFFBQVAsR0FBa0IsU0FBbEI7OztBQUdBLE9BQUssSUFBTCxHQUFZLENBQUM7QUFDWCxVQUFNLGFBREs7QUFFWCxjQUFVO0FBRkMsR0FBRCxDQUFaOzs7QUFNQSxPQUFLLE9BQUwsR0FBZTtBQUNiLFdBQU87QUFDTCxZQUFNLGVBREQ7QUFFTCxjQUFRLEdBRkg7QUFHTCxhQUFPLEdBQUcsS0FBSCxDQUFTLFVBQVQsRUFIRjtBQUlMLGdCQUFVO0FBSkw7QUFETSxHQUFmOztBQVNBLE9BQUssTUFBTCxHQUFjLFVBQUMsTUFBRCxFQUFZO0FBQ3hCLFdBQU8sRUFBRSxPQUFGLENBQVUsRUFBRSxPQUFGLENBQVUsTUFBVixFQUFrQixHQUFsQixFQUF1QixPQUF2QixDQUFWLEVBQTJDLEdBQTNDLEVBQWdELE9BQWhELENBQVA7QUFDRCxHQUZEOztBQUlBLE9BQUssU0FBTCxHQUFpQixVQUFDLFFBQUQsRUFBVyxVQUFYLEVBQTBCO0FBQ3pDLFdBQU8sRUFBRSxTQUFGLENBQVksVUFBWixFQUF3QixVQUFTLENBQVQsRUFBWTtBQUN6QyxhQUFPLEVBQUUsSUFBRixLQUFXLFFBQWxCO0FBQ0QsS0FGTSxDQUFQO0FBR0QsR0FKRDs7QUFNQSxPQUFLLGtCQUFMLEdBQTBCLFVBQUMsS0FBRCxFQUFRLEtBQVIsRUFBa0I7QUFDMUMsUUFBTSxZQUFZLE1BQU0sSUFBeEI7QUFDQSxRQUFNLGFBQWEsTUFBSyxTQUFMLENBQWUsU0FBZixFQUEwQixNQUFNLFFBQWhDLENBQW5COztBQUVBLFFBQUksZUFBZSxDQUFDLENBQXBCLEVBQXVCO0FBQ3JCLFVBQU0sV0FBVztBQUNmLGNBQU0sTUFBTSxJQURHO0FBRWYsY0FBTTtBQUZTLE9BQWpCO0FBSUEsWUFBTSxRQUFOLENBQWUsSUFBZixDQUFvQixRQUFwQjtBQUNELEtBTkQsTUFNTztBQUNMLFlBQU0sUUFBTixDQUFlLFVBQWYsRUFBMkIsSUFBM0I7QUFDRDtBQUNELFVBQU0sSUFBTjs7QUFFQSxVQUFLLEtBQUwsR0FBYSxJQUFiO0FBQ0QsR0FoQkQ7O0FBa0JBLE9BQUssa0JBQUwsR0FBMEIsVUFBQyxNQUFELEVBQVMsaUJBQVQsRUFBK0I7QUFDdkQsZ0JBQVksZUFBWixDQUE0QixJQUE1QixFQUFrQyxpQkFBbEMsRUFBcUQsV0FBckQsRUFDRyxJQURILENBQ1EsVUFBQyxvQkFBRCxFQUEwQjtBQUM5QixVQUFNLGVBQWUscUJBQXFCLElBQXJCLENBQTBCLFlBQTFCLENBQXVDLEtBQTVEO0FBQ0EsY0FBUSxPQUFSLENBQWdCLFlBQWhCLEVBQThCLFVBQUMsS0FBRCxFQUFXO0FBQ3ZDLFlBQU0sWUFBWSxNQUFNLEtBQU4sQ0FBWSxPQUFaLENBQWxCO0FBQ0EsWUFBSSxhQUFhLE1BQUssU0FBTCxDQUFlLFNBQWYsRUFBMEIsT0FBTyxRQUFqQyxDQUFqQjs7QUFFQSxZQUFJLGVBQWUsQ0FBQyxDQUFwQixFQUF1QjtBQUNyQixjQUFNLFdBQVc7QUFDZixrQkFBTSxTQURTO0FBRWYsa0JBQU0sQ0FGUztBQUdmLHNCQUFVO0FBSEssV0FBakI7QUFLQSxpQkFBTyxRQUFQLENBQWdCLElBQWhCLENBQXFCLFFBQXJCO0FBQ0EsdUJBQWEsT0FBTyxRQUFQLENBQWdCLE1BQWhCLEdBQXlCLENBQXRDO0FBQ0Q7QUFDRCxjQUFLLGtCQUFMLENBQXdCLE9BQU8sUUFBUCxDQUFnQixVQUFoQixDQUF4QixFQUFxRCxLQUFyRDtBQUNELE9BZEQ7QUFlRCxLQWxCSDtBQW1CRCxHQXBCRDs7O0FBdUJBLE9BQUssZUFBTCxHQUF1QixVQUFDLGNBQUQsRUFBb0I7QUFDekMsWUFBUSxPQUFSLENBQWdCLGNBQWhCLEVBQWdDLFVBQUMsTUFBRCxFQUFTLEtBQVQsRUFBbUI7QUFDakQsVUFBTSxZQUFZO0FBQ2hCLGNBQU0sT0FBTyxJQURHO0FBRWhCLGNBQU0sT0FBTyxTQUZHO0FBR2hCLGtCQUFVO0FBSE0sT0FBbEI7QUFLQSxZQUFLLElBQUwsQ0FBVSxDQUFWLEVBQWEsUUFBYixDQUFzQixJQUF0QixDQUEyQixTQUEzQjtBQUNBLFlBQUssa0JBQUwsQ0FBd0IsTUFBSyxJQUFMLENBQVUsQ0FBVixFQUFhLFFBQWIsQ0FBc0IsS0FBdEIsQ0FBeEIsRUFBc0QsTUFBSyxNQUFMLENBQVksT0FBTyxJQUFuQixDQUF0RDtBQUNELEtBUkQ7QUFTRCxHQVZEOzs7QUFhQSxjQUFZLGFBQVosQ0FBMEIsSUFBMUIsRUFBZ0MsY0FBaEMsRUFDRyxJQURILENBQ1EsVUFBQyxrQkFBRCxFQUF3QjtBQUM1QixRQUFNLGFBQWEsbUJBQW1CLElBQW5CLENBQXdCLFVBQXhCLENBQW1DLE1BQXREO0FBQ0EsVUFBSyxlQUFMLENBQXFCLFVBQXJCO0FBQ0QsR0FKSDs7O0FBT0EsVUFBUSxHQUFSLENBQVksS0FBSyxJQUFqQjs7QUFFRCxDQXJHZ0UsQ0FBbkUiLCJmaWxlIjoiYXBwL2NvbXBvbmVudHMvY2VudGVyZWQvdG9wX2FydGlzdHMvdG9wQXJ0aXN0c0NvbnRyb2xsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwLWJvb3RzdHJhcCcpLmNvbnRyb2xsZXIoJ3RvcEFydGlzdHNDb250cm9sbGVyJywgW1xuICAndXNlclNlcnZpY2UnLCAnJHNjb3BlJyxcbiAgZnVuY3Rpb24gKHVzZXJTZXJ2aWNlLCAkc2NvcGUpIHtcblxuICAgIGNvbnN0IGxpbWl0VG9wQXJ0aXN0ID0gMTA7XG4gICAgY29uc3QgbGltaXRUcmFja3MgPSAyMDA7XG4gICAgY29uc3QgdXNlciA9ICdsb3Blem5vZWxpYWInO1xuICAgIHRoaXMuY2hhcnQgPSBmYWxzZTtcblxuICAgICRzY29wZS50aXRsZSA9ICdUb3AnO1xuICAgICRzY29wZS5zdWJ0aXRsZSA9ICdBcnRpc3RzJztcblxuICAgIC8vIENoYXJ0IGRhdGFcbiAgICB0aGlzLmRhdGEgPSBbe1xuICAgICAgbmFtZTogJ1RvcCBhcnRpc3RzJyxcbiAgICAgIGNoaWxkcmVuOiBbXVxuICAgIH1dO1xuXG4gICAgLy8gQ2hhcnQgb3B0aW9uc1xuICAgIHRoaXMub3B0aW9ucyA9IHtcbiAgICAgIGNoYXJ0OiB7XG4gICAgICAgIHR5cGU6ICdzdW5idXJzdENoYXJ0JyxcbiAgICAgICAgaGVpZ2h0OiA0NTAsXG4gICAgICAgIGNvbG9yOiBkMy5zY2FsZS5jYXRlZ29yeTEwKCksXG4gICAgICAgIGR1cmF0aW9uOiAyNTBcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy5lbmNvZGUgPSAoc3RyaW5nKSA9PiB7XG4gICAgICByZXR1cm4gXy5yZXBsYWNlKF8ucmVwbGFjZShzdHJpbmcsICcmJywgJyUyNTI3JyksICcrJywgJyUyNTJCJyk7XG4gICAgfTtcblxuICAgIHRoaXMuY2hlY2tJdGVtID0gKGl0ZW1OYW1lLCBpdGVtc0FycmF5KSA9PiB7XG4gICAgICByZXR1cm4gXy5maW5kSW5kZXgoaXRlbXNBcnJheSwgZnVuY3Rpb24obykge1xuICAgICAgICByZXR1cm4gby5uYW1lID09PSBpdGVtTmFtZTtcbiAgICAgIH0pXG4gICAgfTtcblxuICAgIHRoaXMuY3JlYXRlQXJ0aXN0VHJhY2tzID0gKGFsYnVtLCB0cmFjaykgPT4ge1xuICAgICAgY29uc3QgdHJhY2tOYW1lID0gdHJhY2submFtZTtcbiAgICAgIGNvbnN0IHRyYWNrSW5kZXggPSB0aGlzLmNoZWNrSXRlbSh0cmFja05hbWUsIGFsYnVtLmNoaWxkcmVuKTtcbiAgICAgIC8vIFRoZSBzb25nIGRvZXNudCBleGlzdFxuICAgICAgaWYgKHRyYWNrSW5kZXggPT09IC0xKSB7XG4gICAgICAgIGNvbnN0IG5ld1RyYWNrID0ge1xuICAgICAgICAgIG5hbWU6IHRyYWNrLm5hbWUsXG4gICAgICAgICAgc2l6ZTogMVxuICAgICAgICB9XG4gICAgICAgIGFsYnVtLmNoaWxkcmVuLnB1c2gobmV3VHJhY2spO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWxidW0uY2hpbGRyZW5bdHJhY2tJbmRleF0uc2l6ZSsrO1xuICAgICAgfVxuICAgICAgYWxidW0uc2l6ZSsrO1xuICAgICAgLy8gc2FjYXIgZGUgYWNhXG4gICAgICB0aGlzLmNoYXJ0ID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgdGhpcy5jcmVhdGVBcnRpc3RBbGJ1bXMgPSAoYXJ0aXN0LCBhcnRpc3ROYW1lRW5jb2RlZCkgPT4ge1xuICAgICAgdXNlclNlcnZpY2UuZ2V0QXJ0aXN0VHJhY2tzKHVzZXIsIGFydGlzdE5hbWVFbmNvZGVkLCBsaW1pdFRyYWNrcylcbiAgICAgICAgLnRoZW4oKGFydGlzdFRyYWNrc1Jlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgY29uc3QgYXJ0aXN0VHJhY2tzID0gYXJ0aXN0VHJhY2tzUmVzcG9uc2UuZGF0YS5hcnRpc3R0cmFja3MudHJhY2s7XG4gICAgICAgICAgYW5ndWxhci5mb3JFYWNoKGFydGlzdFRyYWNrcywgKHRyYWNrKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBhbGJ1bU5hbWUgPSB0cmFjay5hbGJ1bVsnI3RleHQnXTtcbiAgICAgICAgICAgIGxldCBhbGJ1bUluZGV4ID0gdGhpcy5jaGVja0l0ZW0oYWxidW1OYW1lLCBhcnRpc3QuY2hpbGRyZW4pO1xuICAgICAgICAgICAgLy8gVGhlIGFsYnVtIGRvZXNudCBleGlzdFxuICAgICAgICAgICAgaWYgKGFsYnVtSW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgIGNvbnN0IG5ld0FsYnVtID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IGFsYnVtTmFtZSxcbiAgICAgICAgICAgICAgICBzaXplOiAwLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBhcnRpc3QuY2hpbGRyZW4ucHVzaChuZXdBbGJ1bSk7XG4gICAgICAgICAgICAgIGFsYnVtSW5kZXggPSBhcnRpc3QuY2hpbGRyZW4ubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuY3JlYXRlQXJ0aXN0VHJhY2tzKGFydGlzdC5jaGlsZHJlblthbGJ1bUluZGV4XSwgdHJhY2spO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gUHVzaCBuZXcgYXJ0aXN0IHRvIHRoZSBhcnJheVxuICAgIHRoaXMuY3JlYXRlTmV3QXJ0aXN0ID0gKHRvcEFydGlzdEFycmF5KSA9PiB7XG4gICAgICBhbmd1bGFyLmZvckVhY2godG9wQXJ0aXN0QXJyYXksIChhcnRpc3QsIGluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld0FydGlzdCA9IHtcbiAgICAgICAgICBuYW1lOiBhcnRpc3QubmFtZSxcbiAgICAgICAgICBzaXplOiBhcnRpc3QucGxheWNvdW50LFxuICAgICAgICAgIGNoaWxkcmVuOiBbXVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmRhdGFbMF0uY2hpbGRyZW4ucHVzaChuZXdBcnRpc3QpO1xuICAgICAgICB0aGlzLmNyZWF0ZUFydGlzdEFsYnVtcyh0aGlzLmRhdGFbMF0uY2hpbGRyZW5baW5kZXhdLCB0aGlzLmVuY29kZShhcnRpc3QubmFtZSkpO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIEdldCB0b3AgYXJ0aXN0cyBmcm9tIExhc3QuZm0gYXBpXG4gICAgdXNlclNlcnZpY2UuZ2V0VG9wQXJ0aXN0cyh1c2VyLCBsaW1pdFRvcEFydGlzdClcbiAgICAgIC50aGVuKCh0b3BBcnRpc3RzUmVzcG9uc2UpID0+IHtcbiAgICAgICAgY29uc3QgdG9wQXJ0aXN0cyA9IHRvcEFydGlzdHNSZXNwb25zZS5kYXRhLnRvcGFydGlzdHMuYXJ0aXN0O1xuICAgICAgICB0aGlzLmNyZWF0ZU5ld0FydGlzdCh0b3BBcnRpc3RzKTtcbiAgICAgIH0pO1xuXG4gICAgLy8gZGVidWdnZXI7XG4gICAgY29uc29sZS5sb2codGhpcy5kYXRhKTtcbiAgICAvLyB0aGlzLmNoYXJ0ID0gdHJ1ZTtcbiAgfV0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
